# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    feed.urls:
        all: '%env(FEED_ALL_URL)%'
        inStock: '%env(FEED_INSTOCK_URL)%'
        shoptet: '%env(SHOPPET_FEED_URL)%'
    
    XmlFeedPath: '%env(resolve:XML_FEED_PATH)%'
    
    feed.max_bytes: '%env(int:FEED_MAX_BYTES)%'
    baagl.legacy_category_php: '%kernel.project_dir%/var/baagl/category.php'
    baagl.ignore_regnum_path:  '%kernel.project_dir%/var/baagl/ignore_regnum.txt'
    baagl.image_slots:         21

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            string $xmlFeedPath: '%XmlFeedPath%'

        
    # Form <-> Validator glue (bez toho neexistuje volba "constraints")
    Symfony\Component\Form\Extension\Validator\ValidatorExtension:
        arguments: ['@validator']
        tags: ['form.extension']

    # Definuje volbu "constraints" na všech polích
    Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension:
        tags: ['form.type_extension']

    # (volitelné, ale doporučené – validace submitu/repeated/upload)
    Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension:
        tags: ['form.type_extension']

    Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension:
        tags: ['form.type_extension']

    Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension:
        tags: ['form.type_extension']

    # Guesser mapující constraints z atributů/metadata tříd (volitelné)
    Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser:
        arguments: ['@validator.mapping.class_metadata_factory']
        tags: ['form.type_guesser']

    App\EventSubscriber\ExceptionConsoleSubscriber:
        tags: ['kernel.event_subscriber']
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
            
    # úložiště pro HTTP cache (adresář si klidně změň)
    Symfony\Component\HttpKernel\HttpCache\Store:
        arguments:
            - '%kernel.cache_dir%/http_client' # např. var/cache/dev/http_client
        public: false

    # zabalí defaultní http_client do CachingHttpClient
    http_client.cached:
        class: Symfony\Component\HttpClient\CachingHttpClient
        decorates: 'http_client'
        arguments:
            - '@http_client.cached.inner'
            - '@Symfony\Component\HttpKernel\HttpCache\Store'
        public: false

    App\Service\XmlFeedClient:
        arguments:
            $http: '@http_client'
            $cache: '@cache.app'
            $logger: '@logger'
            $maxBytesDefault: '%feed.max_bytes%'

    App\Service\FeedRegistry:
        calls:
        - [ set, [ 'all', '%env(string:FEED_ALL_URL)%' ] ]
        - [ set, [ 'instock', '%env(string:FEED_INSTOCK_URL)%' ] ]
        - [ set, [ 'shoptet', '%env(string:SHOPPET_FEED_URL)%' ] ]

    App\Service\FeedProvider:
        arguments:
            $client: '@App\Service\XmlFeedClient'
            $registry: '@App\Service\FeedRegistry'

    App\Service\Baagl\BaaglItemNormalizer:
        arguments:
            $ignoreRegnumPath: '%baagl.ignore_regnum_path%'
            $imageSlots: '%baagl.image_slots%'

    App\Service\Baagl\LegacyCategoryResolver:
        arguments:
            $legacyFilePath: '%baagl.legacy_category_php%'
    
    App\Service\Baagl\BaaglShoptetUpdater: ~ 