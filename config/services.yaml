# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        
    # Form <-> Validator glue (bez toho neexistuje volba "constraints")
    Symfony\Component\Form\Extension\Validator\ValidatorExtension:
        arguments: ['@validator']
        tags: ['form.extension']

    # Definuje volbu "constraints" na všech polích
    Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension:
        tags: ['form.type_extension']

    # (volitelné, ale doporučené – validace submitu/repeated/upload)
    Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension:
        tags: ['form.type_extension']

    Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension:
        tags: ['form.type_extension']

    Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension:
        tags: ['form.type_extension']

    # Guesser mapující constraints z atributů/metadata tříd (volitelné)
    Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser:
        arguments: ['@validator.mapping.class_metadata_factory']
        tags: ['form.type_guesser']
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
